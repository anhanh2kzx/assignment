{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\assignment\\\\src\\\\pages\\\\views\\\\Admin\\\\AddProductForm\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'; // import firebase from 'firebase';\n\nconst AddProduct = ({\n  onAdd\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // Sử dụng hook form\n\n  let history = useHistory();\n  const [desc, setDesc] = useState(\"\"); // const [valueInput, setValueInput] = useState({});\n  // const onHandleChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setValueInput({\n  //         ...valueInput,\n  //         [name]: value\n  //     })\n  // }\n  // const onHandleSubmit = (data) => {\n  //     let file = data.image[0];\n  //     // tạo folder chứa ảnh trên firesbase\n  //     let storageRef = firebase.storage().ref(`images/${file.name}`);\n  //     // đẩy ảnh lên đường dẫn trên\n  //     let uploadTask = storageRef.put(file);\n  //     // thực hiện việc đầy ảnh lên firebase\n  //     uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED);\n  //     // lấy ảnh từ Firebase\n  //     firebase.storage().ref().child(`images/${file.name}`).getDownloadURL().then((url) => {\n  //         // Tạo object mới chứa toàn bộ thông tin từ input\n  //         const newData = {\n  //             id: Math.random().toString(36).substr(2, 9),\n  //             ...data,\n  //             desc,\n  //             image: url\n  //         }\n  //         // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\n  //         onAdd(newData)\n  //         history.push('/admin/products');\n  //     })\n  // }\n\n  const onHandleSubmit = data => {\n    const newData = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...data\n    };\n    onAdd(newData);\n    history.push('/admin/products');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"w-50\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    id: \"productName\",\n    ref: register({\n      required: true,\n      minLength: 10\n    }),\n    \"aria-describedby\": \"nameHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"nameHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, errors.name && errors.name.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 76\n    }\n  }, \"Khong duoc de trong\"), errors.name && errors.name.type === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 77\n    }\n  }, \"Min Length 10\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Gi\\xE1 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    className: \"form-control\",\n    id: \"productPrice\",\n    ref: register({\n      required: true\n    }),\n    \"aria-describedby\": \"priceHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"priceHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, errors.price && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 94\n    }\n  }, \"This field is required\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Th\\xEAm s\\u1EA3n ph\\u1EA9m\")));\n};\n\nAddProduct.propTypes = {\n  onAdd: PropTypes.func\n};\nexport default AddProduct;","map":{"version":3,"sources":["E:/React/assignment/src/pages/views/Admin/AddProductForm/index.js"],"names":["React","useState","PropTypes","useHistory","useForm","AddProduct","onAdd","register","handleSubmit","errors","history","desc","setDesc","onHandleSubmit","data","newData","id","Math","random","toString","substr","push","required","minLength","name","type","price","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n// import firebase from 'firebase';\n\n\nconst AddProduct = ({ onAdd }) => {\n    const { register, handleSubmit, errors } = useForm(); // Sử dụng hook form\n    let history = useHistory();\n    const [desc,setDesc] = useState(\"\");\n    // const [valueInput, setValueInput] = useState({});\n\n    // const onHandleChange = (e) => {\n    //     const { name, value } = e.target;\n    //     setValueInput({\n    //         ...valueInput,\n    //         [name]: value\n    //     })\n    // }\n\n    // const onHandleSubmit = (data) => {\n    //     let file = data.image[0];\n    //     // tạo folder chứa ảnh trên firesbase\n    //     let storageRef = firebase.storage().ref(`images/${file.name}`);\n    //     // đẩy ảnh lên đường dẫn trên\n    //     let uploadTask = storageRef.put(file);\n    //     // thực hiện việc đầy ảnh lên firebase\n    //     uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED);\n\n    //     // lấy ảnh từ Firebase\n    //     firebase.storage().ref().child(`images/${file.name}`).getDownloadURL().then((url) => {\n    //         // Tạo object mới chứa toàn bộ thông tin từ input\n    //         const newData = {\n    //             id: Math.random().toString(36).substr(2, 9),\n    //             ...data,\n    //             desc,\n    //             image: url\n    //         }\n    //         // đẩy dữ liệu ra ngoài app.js thông qua props onAdd\n    //         onAdd(newData)\n    //         history.push('/admin/products');\n    //     })\n    // }\n    const onHandleSubmit = (data) => {\n        const newData = {\n            id: Math.random().toString(36).substr(2, 9),\n            ...data\n        }\n        onAdd(newData);\n        history.push('/admin/products');\n    }\n\n    return (\n        <div>\n            <form action=\"\" className=\"w-50\" onSubmit={handleSubmit(onHandleSubmit)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"productName\">Tên sản phẩm</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        ref={register({ required: true, minLength: 10 })}\n                        aria-describedby=\"nameHelp\"\n                    />\n                    <small id=\"nameHelp\" className=\"form-text text-danger\">\n                        {errors.name && errors.name.type === \"required\" && <span>Khong duoc de trong</span>}\n                        {errors.name && errors.name.type === \"minLength\" && <span>Min Length 10</span>}\n                    </small>\n                </div>\n                {/* <div className=\"form-group\">\n                    <label htmlFor=\"productImage\">Ảnh sản phẩm</label>\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        className=\"form-control\"\n                        id=\"productImage\"\n                        ref={register({ required: true })}\n                        aria-describedby=\"imageHelp\"\n                    />\n                    <small id=\"imageHelp\" className=\"form-text text-danger\">{errors.image && <span>This field is required</span>}</small>\n                </div> */}\n                <div className=\"form-group\">\n                    <label htmlFor=\"productPrice\">Giá sản phẩm</label>\n                    <input\n                        type=\"text\"\n                        name=\"price\"\n                        className=\"form-control\"\n                        id=\"productPrice\"\n                        ref={register({ required: true })}\n                        aria-describedby=\"priceHelp\"\n                    />\n                    <small id=\"priceHelp\" className=\"form-text text-danger\">{errors.price && <span>This field is required</span>}</small>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Thêm sản phẩm</button>\n            </form>\n        </div>\n    )\n}\n\nAddProduct.propTypes = {\n    onAdd: PropTypes.func\n}\n\nexport default AddProduct\n"]},"metadata":{},"sourceType":"module"}