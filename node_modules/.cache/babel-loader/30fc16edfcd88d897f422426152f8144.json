{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\assignment\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react'; // import Products from './components/Products';\n// import Box from './components/Box/Box';\n// import Home from './components/Main/NavBar'\n// import Product from './components/Product';\n\nimport dataFake from './dataFake';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport { useParams, useHistory } from 'react-router-dom';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n  const id = useParams().id;\n  const [product, setProduct] = useState([]);\n  useEffect(() => {\n    const getProduct = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll(id);\n        setProduct(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProduct();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    product: product,\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/React/assignment/src/App.js"],"names":["React","useState","useEffect","dataFake","Routers","apiRequest","useParams","useHistory","App","products","setProducts","getProducts","data","getAll","error","console","log","id","product","setProduct","getProduct","onHandleRemove","remove","newProducts","filter","onHandleAdd","create","onHandleUpdate","updateProduct","map","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Products from './components/Products';\n// import Box from './components/Box/Box';\n// import Home from './components/Main/NavBar'\n// import Product from './components/Product';\nimport dataFake from './dataFake';\nimport Routers from './routers'\nimport apiRequest from './api/productApi';\nimport { useParams, useHistory } from 'react-router-dom';\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n    // Danh sách sản phẩm\n    useEffect(() => {\n      const getProducts = async () => {\n        try {\n          const { data } = await apiRequest.getAll();\n          setProducts(data);\n        } catch (error) {\n          console.log('failed to request API: ', error)\n        }\n      }\n      getProducts();\n    }, []);\n      const id = useParams().id;\n      const [product, setProduct] = useState([]);\n      useEffect(() => {\n        const getProduct = async () => {\n          try {\n            const { data } = await apiRequest.getAll(id);\n            setProduct(data);\n          } catch (error) {\n            console.log('failed to request API: ', error)\n          }\n        }\n        getProduct();\n      }, []);\n  \n    // Xóa sản phẩm\n    const onHandleRemove = async (id) => {\n      try {\n         await apiRequest.remove(id);\n        const newProducts = products.filter(product => product.id !== id);\n        setProducts(newProducts);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n  \n    }\n    // Thêm sản phẩm\n    const onHandleAdd = async (product) => {\n      try {\n        const { data } = await apiRequest.create(product);\n        setProducts([\n          ...products,\n          data\n        ])\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n  \n  \n    // Cập nhật product \n    const onHandleUpdate = (updateProduct) => {\n      const newProducts = products.map(product => (\n        product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n      ));\n      localStorage.setItem('products', JSON.stringify(newProducts))\n      setProducts(newProducts);\n    }\n  \n  return (\n    <div className=\"App\">\n      <Routers product={product} products={products} onRemove={onHandleRemove} onAdd={onHandleAdd} onUpdate={onHandleUpdate} />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}